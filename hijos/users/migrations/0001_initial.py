# Generated by Django 2.0.4 on 2018-04-14 11:59

import datetime

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('degree', models.CharField(choices=[('1', 'Entered Apprentice'), ('2', 'Fellow Craft'), ('3', 'Master Mason')], default='1', max_length=1, verbose_name='degree')),
                ('initiated', models.DateField(blank=True, help_text='Initiation date.', null=True, verbose_name='initiated')),
                ('passed', models.DateField(blank=True, help_text='Passed to Fellow Craft date.', null=True, verbose_name='passed')),
                ('raised', models.DateField(blank=True, help_text='Raised to Master Mason date.', null=True, verbose_name='raised')),
                ('past_master', models.BooleanField(default=False, help_text='Is or was Worshipful Master.', verbose_name='past master')),
                ('worshipful', models.BooleanField(default=False, help_text='Is or was elected official of the Grand Lodge.', verbose_name='worshipful')),
                ('most_worshipful', models.BooleanField(default=False, help_text='Is or was elected as Most Worshipful Master of the Grand Lodge.', verbose_name='most worshipful')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['last_name', 'first_name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('last_modified_on', models.DateTimeField(auto_now=True, verbose_name='last modified on')),
            ],
            options={
                'verbose_name': 'affiliation',
                'verbose_name_plural': 'affiliations',
                'ordering': ['-created_on'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('last_modified_on', models.DateTimeField(auto_now=True, verbose_name='last modified on')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('description', models.CharField(blank=True, default='', max_length=300, verbose_name='description')),
                ('created_by', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('last_modified_by', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='CategoryPrice',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('last_modified_on', models.DateTimeField(auto_now=True, verbose_name='last modified on')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('date_from', models.DateField(verbose_name='date from')),
                ('date_until', models.DateField(blank=True, default=datetime.date(3000, 12, 31), verbose_name='date until')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prices', related_query_name='price', to='users.Category', verbose_name='category')),
                ('created_by', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('last_modified_by', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'verbose_name': 'price',
                'verbose_name_plural': 'prices',
                'ordering': ['-date_until', '-date_from'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Lodge',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('last_modified_on', models.DateTimeField(auto_now=True, verbose_name='last modified on')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('created_by', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('last_modified_by', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'verbose_name': 'lodge',
                'verbose_name_plural': 'lodges',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.AddField(
            model_name='affiliation',
            name='category',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='affiliations', related_query_name='affiliation', to='users.Category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='created_by',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='last_modified_by',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='last modified by'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='lodge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='affiliations', related_query_name='affiliation', to='users.Lodge', verbose_name='lodge'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='user',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='affiliations', related_query_name='affiliation', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AlterUniqueTogether(
            name='affiliation',
            unique_together={('lodge', 'user')},
        ),
        migrations.AlterIndexTogether(
            name='affiliation',
            index_together={('lodge', 'user')},
        ),
    ]
